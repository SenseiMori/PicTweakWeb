version: '3.4'

services:
  backend:
    image: ${DOCKER_REGISTRY-}webpictweak
    build:
      context: .
      dockerfile: WebPicTweak/Dockerfile
        

  client:
    image: client
    build:
      context: ./tweaksite/
      dockerfile: Dockerfile
  
  init-dhparams:
    image: docker.io/certbot/certbot
    entrypoint: /bin/sh
    command: -c 'test -f /etc/letsencrypt/ssl-dhparams.pem || openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 4096'
    volumes:
      - cert_volume:/etc/letsencrypt:Z

  certbot-oneshot:
    image: docker.io/certbot/certbot
    restart: "no"
    entrypoint: /bin/sh
    command: -c 'test -d /etc/letsencrypt/live/tweakypro.ru/ || certbot certonly  --standalone --staging --register-unsafely-without-email -d "tweakypro.ru" --rsa-key-size 4096 --agree-tos --force-renewal'
    ports:
      - 80:80
    volumes:
      - cert_volume:/etc/letsencrypt:Z

  proxy:
    image: docker.io/library/nginx
    entrypoint: /bin/sh
    command: -c 'while :; do sleep 6h && wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'
    configs:
     - source: nginx-defaultserver
       target: /etc/nginx/conf.d/default.conf
    ports:
      - 80:80
      - 443:443
    depends_on:
      init-dhparams:
        condition: service_completed_successfully
        required: true
      certbot-oneshot:
        condition: service_completed_successfully
        required: true
    volumes:
      - cert_volume:/etc/letsencrypt:Z
      - acme_challenge:/usr/share/nginx/html/.well-known:Z 
      - react_build:/usr/share/nginx/html
  
  certbot:
    image: docker.io/certbot/certbot
    entrypoint: /bin/sh
    command: -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 24h; done;'
    depends_on:
      proxy:
        condition: service_started
        required: true
    volumes:
      - cert_volume:/etc/letsencrypt:Z
      - acme_challenge:/usr/share/nginx/html:Z

volumes:
  cert_volume: {}
  acme_challenge: {}
  react_build: {}
  
configs:
  nginx-defaultserver:
   content: | 
        upstream backend {
         server backend:5000;
         resolver 127.0.0.1 valid=30s;
         resolver_timeout 5s;
         }
        upstream client {
         server client:5002;
         resolver 127.0.0.1 valid=30s;
         resolver_timeout 5s;
         }

        server {
         listen 443 ssl http2;
         server_name tweakypro.ru www.tweakypro.ru;

         ssl_certificate     /etc/letsencrypt/live/tweakypro.ru/fullchain.pem;
         ssl_certificate_key /etc/letsencrypt/live/tweakypro.ru/privkey.pem;

         location / {
          proxy_pass http://client;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
         }

        location /api/ {
          proxy_pass http://backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
         }

        
        }

        server {
          listen 80;
          server_name tweakypro.ru www.tweakypro.ru;
          location /.well-known/acme-challenge/ {
          root /usr/share/nginx/html;
         }

        location / {
          return 301 https://$host$request_uri;
         }
        }

