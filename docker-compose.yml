version: '3.4'

services:
  backend:
    image: ${DOCKER_REGISTRY-}webpictweak
    build:
      context: .
      dockerfile: WebPicTweak/Dockerfile

  client:
    image: client
    build:
      context: ./tweaksite/
      dockerfile: Dockerfile
  
  init-dhparams:
    image: certbot/certbot
    entrypoint: /bin/sh
    command: -c 'test -f /etc/letsencrypt/ssl-dhparams.pem || openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 4096'
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:Z

  proxy:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    depends_on:
      - client
      - backend
      - init-dhparams
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - acme_challenge:/usr/share/nginx/html/.well-known:rw
      - react_build:/usr/share/nginx/html:ro
    configs:
      - source: nginx-defaultserver
        target: /etc/nginx/conf.d/default.conf
    entrypoint: /bin/sh
    command: -c 'while :; do sleep 6h && wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'

  certbot:
    image: certbot/certbot
    entrypoint: /bin/sh
    command: -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 24h; done;'
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - acme_challenge:/usr/share/nginx/html/.well-known:rw

volumes:
  acme_challenge: {}
  react_build: {}

configs:
  nginx-defaultserver:
    content: |
      upstream backend {
        server back-api:8000;
        resolver 127.0.0.11 valid=30s;
        resolver_timeout 5s;
      }

      server {
        listen 443 ssl http2;
        server_name tweakypro.ru www.tweakypro.ru;

        ssl_certificate     /etc/letsencrypt/live/tweakypro.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tweakypro.ru/privkey.pem;
        ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

        root /usr/share/nginx/html;
        index index.html;
        location / {
          try_files $uri $uri/ /index.html;
        }

        location /api/ {
          proxy_pass http://backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }

      server {
        listen 80;
        server_name tweakypro.ru www.tweakypro.ru;
        location /.well-known/acme-challenge/ {
          root /usr/share/nginx/html;
        }

        location / {
          return 301 https://$host$request_uri;
        }
      }

