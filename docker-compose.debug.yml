
services:
  backend:
    image: ${DOCKER_REGISTRY-}webpictweak
    build:
      context: .
      dockerfile: ./WebPicTweak.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      #- ASPNETCORE_HTTPS_PORTS=8081
      - STORAGE_PATH=/data/images
    ports:
      - "5000:8080"
      #- "5001:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro  
      - './localdata/images:/data/images'

  postgres:
    image: postgres:latest
    container_name: webpictweak_postgres
    restart: always
    environment:
      POSTGRES_USER: webpictweak_user
      POSTGRES_PASSWORD: secure_password_here
      POSTGRES_DB: webpictweak_db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  client:
    image: client
    build:
      context: ./web
      dockerfile: Dockerfile
 

  proxy:
    image: docker.io/library/nginx
    configs:
     - source: nginx-defaultserver
       target: /etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - backend
      - client
      
volumes:
  db_data: {}

configs:
   nginx-defaultserver:
     content: |
        upstream backend {
         server backend:8080;
 
         }
        upstream client {
         server client:3000;

         }

        server {
         listen 80;
         server_name localhost;


          location / {
        proxy_pass http://client;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        }

          location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        }
        
          location /archiveHub {
        proxy_pass http://backend/archiveHub;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        